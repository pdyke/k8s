apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  # namespace: myname
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      restartPolicy: Always
      containers:
      - name: mongo
        image: mongo
        volumeMount:
      - name: mypv
        mountPath: /data/db
  volumes:
    - name: mypv
      persistentVolumeClaim:
        claimName: mypvc
        # resources:
        #   limits:
        #     memory: "600Mi"
        #     cpu: "600m"
        ports:
        - containerPort: 27017
        env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: password


---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: myname
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mypv
# spec:
#   capacity:
#     storage: 1Gi
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Recycle
#   storageClassName: standard
#   hostPath:
#     path: /tmp/mypv

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mypvc
# spec:
#   resources:
#     requests:
#       storage: 1Gi
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: standard
#   volumeName: mypv


